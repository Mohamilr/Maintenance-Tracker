{"version":3,"sources":["../../src/controller/requestController.js"],"names":["RequestController","allRequest","req","res","status","json","message","count","requests","length","getsingleRequest","id","parseInt","params","singleRequest","find","request","addRequest","lastId","newID","body","faultyItem","itemType","complaint","push","date","Date","modifyARequest","map"],"mappings":"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","sourcesContent":["//import requests\r\nimport requests from '../dummydata/dummyData';\r\n\r\nconst RequestController = {\r\n  allRequest(req, res) {\r\n    \r\n    // returns all the requests in the dummydata\r\n    res.status(200).json({\r\n      message: 'all requests',\r\n      count: requests.length,\r\n      requests\r\n    })\r\n  },\r\n  getsingleRequest(req, res) {\r\n    const id = parseInt(req.params.id);\r\n    // select a request by id\r\n    const singleRequest = requests.find(request => request.id === id);\r\n    \r\n    // an error message if the id is not present\r\n    if(!singleRequest){\r\n       res.status(404).json({ message: `request with id ${id} not found` })\r\n      }\r\n    // return single request\r\n    return res.status(200).json({ singleRequest });\r\n    \r\n },\r\n addRequest(req, res) {\r\n    const lastId = requests[requests.length - 1].id;\r\n    const newID = lastId + 1;\r\n\r\n    const { faultyItem, itemType, complaint} = req.body;\r\n    const status = 'pending';\r\n\r\n    if(!faultyItem || !itemType || !complaint){\r\n      res.status(400).json({\r\n        message: \"input all body\"\r\n      })\r\n    }\r\n    // adds request to the present requests \r\n    requests.push({\r\n        id: newID,\r\n        faultyItem,\r\n        itemType,\r\n        date: new Date(),\r\n        complaint,\r\n        status\r\n    });\r\n\r\n    // response to the post request\r\n    return res.status(201).json({ \r\n      message: 'request created succesfully',\r\n      request: {\r\n        id: newID,\r\n        faultyItem,\r\n        itemType,\r\n        date: new Date(),\r\n        complaint,\r\n        status\r\n      }\r\n      });\r\n    \r\n  },\r\n  modifyARequest(req, res) {\r\n    const id = parseInt(req.params.id);\r\n    const { faultyItem, itemType, complaint} = req.body;\r\n\r\n    requests.map(request => {\r\n      if(request.id === id) {\r\n        requests[id -1] = {\r\n          id: id,\r\n          faultyItem: faultyItem || request.faultyItem,\r\n          itemType: itemType || request.itemType,\r\n          date: new Date(),\r\n          complaint: complaint || request.complaint,\r\n          status: request.status    \r\n        }\r\n      }\r\n    }) \r\n\r\n      return res.status(200).json({ \r\n        message: 'request updated successfully'\r\n      }) ;\r\n  } \r\n}\r\n\r\n\r\nexport default RequestController;"],"file":"requestController.js"}